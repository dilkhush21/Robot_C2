#Config file for declaring custom actions'parameters. The parameters have been listed here in alphabetical order (A-Z).

#Adafruit_IO. Sending commands from Genuine Google Home/Assistant Devices to control Domoticz Tasmota etc.
ADAFRUIT_IO:
  ADAFRUIT_IO_CONTROL: 'Disabled'
  ADAFRUIT_IO_USERNAME: 'ENTER YOUR ADAFRUIT_IO USERNAME HERE'
  ADAFRUIT_IO_KEY: 'ENTER YOUR ADAFRUIT_IO KEY HERE'
  FEEDNAME: 'ENTER YOUR ADAFRUIT_IO FEEDNAME THAT YOU WANT TO MONITOR HERE'

#Custom conversation. Add your queries and expected assistant response. Do not add symbols or special charecters.
Conversation:
  Conversation_Control: 'Enabled'
  question:
    1:
      - 'Who are you'
    2:
      - 'Do you have a family'
  answer:
    1:
      - 'I am not the one you expect to be'
      - 'Who do you think I am'
      - 'What bothers you'
    2:
      - 'Nope i am forever alone'
      - 'The whole world is my family'

#Send sms with clickatell
Clickatell:
  Clickatell_Control: 'Disabled'
  Clickatell_API: 'ENTER_YOUR_CLICKATELL_API'
  Name:
    - 'Bob'
    - 'Adam'
  Reciever:
    - '+48123456789'
    - '+46123456789'

# Deezer user credentials
Deezer:
  Deezer_Control: 'Enabled'
  User_id: '2247762504'

# DIY-HUE declarations
DIYHUE:
  DIYHUE_Control: 'Enabled'

# Domoticz declarations
Domoticz:
  # Set this to 'Enabled' to control devices registered to Domoticz server.
  Domoticz_Control: 'Disabled'
  Server_IP:
    # If you are running the server on the Pi itself, then change the ip to 'localhost'
    - '192.168.0.10'
  Server_port:
    - '443'
  Devices:
    #The number of names and number of ids should be equal
    #List the device names that you want to control
    Name:
      - 'Lamp1'
      - 'Lamp2'
      - 'Lamp3'
    #Assign the device ids in the same order as the devices listed above
    Id:
      - '1'
      - '2'
      - '3'

#ESP control declarations. Follow a similar pattern to add your own list.
ESP:
  ESP_Control: 'Enabled'
  IP: 'xxxxxxxxxxxx' #Enter your ESP's IP here.
  devicename:
    - 'Device 1'
    - 'Device 2'
    - 'Device 3'
  deviceid:
    - '/Device1'
    - '/Device2'
    - '/Device3'

#Streaming songs from Gaana.com
Gaana:
  Gaana_Control: 'Enabled'
  Playlist:
    # Enter your desired playlists
    - 'https://gaana.com/playlist/gaana-dj-bollywood-top-50-1'
    - 'https://gaana.com/playlist/alka-yagnik-bday'

#Enter your Google Login Credentials
Gmusicapi:
  Gmusic_Control: 'Enabled'

#Pushbullet
Pushbullet:
  Pushbullet_Control: 'Enabled'

#API Key for YouTube and Kickstarter Search Engine
Google_cloud_api_key: "AIzaSyCLgmsQfysogtwinwfXpG1TX8-x_N9R1hY"

#GPIOS used in the project. Feel free to change in case.
Gpios:
  AIY_indicator:
    - 25
  assistant_indicators:
    - 05
    - 06
  ir:
    - 17
  picontrol:
    - 12
    - 13
    - 24
  pushbutton_trigger:
    - 22
  servo:
    - 27
  stopbutton_music_AIY_pushbutton:
    - 23

#Preset commands/requests using IR remote/receiver
IR:
  IR_Control: 'Disabled'
  Codes:
    - 58056
    - 58072
    - 58064
  Commands:
    - "Start conversation"
    - "custom stop" #Custom command stop
    - "what is the time in London"

#KODI custom declarations change IP, music directory and video directory according to your device
Kodi:
  Kodi_Control: 'Disabled'
  ip: 192.168.88.226
  port: 8080
  username: kodi
  password: kodi
  musicdirectory: '/home/osmc/Music/'
  videodirectory: '/home/osmc/Movies/'
  windowcmd:
    - Home
    - Settings
    - Weather
    - Videos
    - Music
    - Player
  window:
    - home
    - settings
    - weather
    - videos
    - music
    - playercontrols

#Change you language. Default is english
Language:
  Choice: 'en-US'
  Language options:
     - 'en-US' #'English'US
     - 'en-GB' #English GB
     - 'fr-FR' # 'French'
     - 'de-DE' # 'German'
     - 'it-IT' # 'Italian'
     - 'es-ES' # 'Spanish'
     - 'nl-NL' # 'Dutch'
     - 'sv-SE' # 'Swedish'

# Enter your Magic Mirror IP
Mmmip: 'ENTER_YOUR_MAGIC_MIRROR_IP'

#MQTT credentials
MQTT:
  MQTT_Control: 'Disabled'
  IP: 'Enter your MQTT IP ADDRESS here'
  UNAME: 'Enter your MQTT USERNAME here'
  PSWRD: 'Enter your MQTT PASSWORD here'
  TOPIC: 'ENTER your MQTT TOPIC here'

#Text to speak notifications (replay after me workaround for mqtt).
#You can change command word to something else if your command is mixed with native functions
Notify_TTS:
  Notify_TTS_Control: 'Enabled'

#Pushbullet
Pushbullet:
  Pushbullet_API_KEY: 'ENTER YOUR PUSHBULLET KEY HERE'
  Pushbullet_Control: 'Enabled'

#Radio station declarations. Follow a similar pattern to add your own stations.
#Google may not pickup the pronunciation of radio station names, hence 'Radio 1' etc is required.
Radio_stations:
  Radio_Control: 'Enabled'
  stationnames:
    - 'Radio 1'
    - 'Radio 2'
    - 'Radio 3'
    - 'Radio 4'
    - 'Radio 5'
    - 'Radio 6'
  stationlinks:
    - 'http://stream.100p.nl/100pctnl.mp3'
    - 'http://stream.radiocorp.nl/100pnl_feest_mp3'
    - 'http://playerservices.streamtheworld.com/api/livestream-redirect/SKYRADIO.mp3'
    - 'https://stream.slam.nl/slam_mp3'
    - 'http://icecast.omroep.nl/3fm-bb-mp3'
    - 'http://playerservices.streamtheworld.com/api/livestream-redirect/VERONICA.mp3'
  stationradio:
    - '100% NL'
    - '100% NL Party'
    - 'Skyradio'
    - 'Slam FM'
    - '3 FM'
    - 'Veronica'

#Pi GPIO control declarations. Follow a similar pattern to add your own list of GPIOs
Raspberrypi_GPIO_Control:
  GPIO_Control: 'Enabled'
  lightnames:
    - 'kitchen lights'
    - 'bathroom lights'
    - 'bedroom lights'

#Custom scripts. Add your scripts commands.
Script:
  Script_Control: 'Disabled'
  scriptname:
    - 'Script test'
  scriptcommand:
    - 'echo test >> /home/pi/test.txt'

#Speech to text conversion
Speechtotext:
  Google_Cloud_Speech:
    Cloud_Speech_Control: 'Disabled'
    Google_Cloud_Speech_Credentials_Path: "ENTER THE PATH TO YOUR CLOUD SPEECH CREDENTIALS FILE HERE"

#Spotify credentials. Register for a spotify developer and get the credentials.
Spotify:
  Spotify_Control: 'Enabled'
  client_id: 'ENTER YOUR SPOTIFY CLIENT ID HERE'
  client_secret: 'ENTER YOUR SPOTIFY CLIENT SECRET HERE'
  username: 'ENTER YOUR SPOTIFY USERNAME HERE'

#Enter your Tasmota Device details below
Tasmota_devicelist:
  Tasmota_Control: 'Enabled'
  friendly-names:
    - 'Desk Light'
    - 'Table Light'
  ipaddresses:
    - '192.168.1.36'
    - '192.168.1.35'
  portID:
    - '1'
    - '1'

#Text to speech conversation
TextToSpeech:
  # Set the choice to:
  # 1. "gTTS" for quotaless text to speech conversion
  # 2. "Google Cloud" for Google Cloud text to sppech conversion. Free limit 4 Million Characters/month
  Choice: 'gTTS'
  Google_Cloud_TTS_Credentials_Path: "ENTER THE PATH TO YOUR TTS CREDENTIALS FILE HERE"
  #Voice for the "SAY" function or text to speech. Set it to 'Female' or 'Male' depending on your preference.
  #Note: This does not change Google's voice. this is only for the speech generated within custom actions.
  Voice_Gender: 'Female'

#Custom wakeword On/Off.
#To enable custom wakeword, change status to Enabled and restart the assistant.
Wakewords:
  Ok_Google: 'Enabled'
  Custom_Wakeword: 'Enabled'
  #Set below to 'Picovoice' or 'Snowboy' as per your choice.
  Wakeword_Engine: 'Snowboy'
  Snowboy_wakeword_models:
    - '/home/pi/GassistPi/src/resources/snowboy_models/alexa.umdl'
    - '/home/pi/GassistPi/src/resources/snowboy_models/snowboy.umdl'
  Picovoice_wakeword_models:
    - '/home/pi/GassistPi/src/resources/picovoice_models/americano_raspberry-pi.ppn'

#Wemo/Emulated Wemo devices
Wemo:
  Wemo_Control: 'Disabled'
  Wemo_Devices:
    IP_Address:
      - 'Enter wemo device 1 ip here'
      - 'Enter wemo device 2 ip here'
    Device_Names:
      - 'Enter wemo device 1 name here'
      - 'Enter wemo device 1 name here'

#Youtube music streaming
YouTube:
  YouTube_Control: 'Enabled'
